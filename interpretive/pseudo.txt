************************ Exercise 1 ************************
Input: Number represting number of switches
Output: Array representing which switches are on after count number of passes (count number of passes = number of switches)
Rules:
  -Switch names begin with 1 and end with count
  -Round 1: Flip every switch.
  -Round 2: Flip every other switch (so that even numbered lights are off)
  -Round 3: Flip every 3rd switch
  -etc.
Algorithm:
  -Initialize an array of sub-arrays. The first number in each sub-array is the switch number; the second is a boolean representing
    whether the switch is on or off (i.e, [[1, false], [2, false], [3, false])
  -Initialize a loop that exits after count iterations
    -During each iteration, flip every switch whose index is divisible by whatever value represents the current iteration
  -Filter the array so that only the switch numbers of the switches that are left on are left
  -Return the filtered array
  
************************ Exercise 2 ************************
Input: Odd integer
Output: Diamond that is made of stars
Rules:
  -The widest point of the diamond should be input *'s wide
  -The first line of the diamond should be one star wide
  -Subsequent lines of the diamond should be 2 stars wider until reaching the widest point
  -Spaces = Math.floor(widestpoint / 2)

FURTHER EXPLORATION:
Algorithm:
  -first and last star stay stars; remaining stars become spaces

************************ Exercise 3 ************************
Input: word
Output: true or false, depending on whether word can be spelled with given blocks
Rules:
  -word can only be spelled with blocks if no two of its letters appear on the same blocks
  -word blocks:
    B:O   X:K   D:Q   C:P   N:A
    G:T   R:E   F:S   J:W   H:U
    V:I   L:Y   Z:M
  -words are case insensitive
Algorithm:
  -initialize a word blocks array. Within the array, add each pair of words in a sub array.
  -loop through the letters in the word
    -if letter is located within array, continue; if not, return 'false'
    -remove sub-array containing letter from the array
  -return true